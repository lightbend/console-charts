language: go
sudo: required
dist: xenial

services:
- docker

install:
- scripts/setup-tools-for-ubuntu.sh
- curl -sL https://raw.githubusercontent.com/travis-ci/artifacts/master/install | bash

jobs:
  include:
  - stage: Tests
    name: Validate
    script:
    - make lint

  - name: ES Smoke Tests
    script:
    - scripts/setup-minikube-for-linux.sh
    - make test CHARTS=enterprise-suite

  - name: ES Smoke Tests (Latest)
    # Only build latest in the daily cron - don't block PRs or master releases.
    if: type in (cron)
    script:
    - scripts/setup-minikube-for-linux.sh
    - make test CHARTS=enterprise-suite-latest

  - name: ES Frontend E2E
    addons:
      apt:
        update: true
        packages:
        - libgconf2-4
    cache:
      directories:
        - ~/.npm
        - ~/.cache
    node_js: 9.4.0
    script:
    - scripts/setup-minikube-for-linux.sh
    - make test CHARTS=enterprise-suite ES_TEST=frontend
    after_script:
    # Cypress videos.
    - artifacts upload $(find . -name '*.mp4')

  - name: ES Frontend E2E (Latest)
    if: type in (cron)
    addons:
      apt:
        update: true
        packages:
        - libgconf2-4
    cache:
      directories:
        - ~/.npm
        - ~/.cache
    node_js: 9.4.0
    script:
    - scripts/setup-minikube-for-linux.sh
    - make test CHARTS=enterprise-suite-latest ES_TEST=frontend

  - name: Reactive-sandbox test
    script:
    - make test CHARTS=reactive-sandbox

  - stage: deploy
    name: Deploy to GCS
    # Only deploy for pushes to master (and if manually invoked)
    if: type IN (push, api)
    script:
    # Decrypt credentials for GCS system account helmchart@es-repo.iam.gserviceaccount.com
    - mkdir -p /tmp/resources
    - openssl aes-256-cbc -K $encrypted_f01ffbb90c44_key -iv $encrypted_f01ffbb90c44_iv -in resources/es-repo-7c1fefe17951.json.enc -out /tmp/resources/es-repo-7c1fefe17951.json -d
    - scripts/deploy-to-gcs.sh
    - scripts/trigger-build-helm-charts.sh

branches:
  only:
  - master

notifications:
  email: false
  slack:
    rooms:
      secure: AHDrkFweHIHLOY5VFaxgfLQKlARY5b8wM/jN3XGoEzvpECQgFrgUN/KNGUmYDlWJkmxuzr4lNpVKZe6gUgYUBwGbOO7uhLjpcoPJSYj9T2dj1Dddh9hEReDlgP/VCyPKQoPSX/8/ZJF1yq1vSAXC9es1ek4dyJAcEyWmH5uYYM2jslxNm6J64XFAwZKSo2gU98jEMvbGFfjbfdlDIRQJlKmMTpJMxvWJLHZFmLMAXgK2SB3htrS4lasOh775vEqMc4fS/Cmecb/KsVnDcYHUCYT2SZpNzkde8uCTPgB5XdZZf3F7zo1HK7+3a7eygIbWtGTDk9AUisODZLAjPTRDRVDyjSt7pNKbDhipGrYvWgt397WbvlXiDZ8TeOkWJdTf2E7RM5odtJL5ZF0XklnqOQMu2b/ZXlMq4vZTYAbsof5+Nw3Fw00iqCBEUd9J9nvaoQX/86cySWfU1N/NlptIG5hY4ro3tsrvSuIkmyBM6XN3GUFp8OexeNcCtaW40XO0qnzpbYv4be7Be6yG6fPhewO+5pOIM4mL8V+ryORAzK29MIU0L+9/gChmTxZ4YmUbksYYp1ifUlAmSnJAZcMXIy2DhqrWs9pszLKeGC4dzOxmNNzWGYnL1l2X137wRC0mfKK84Bxs1RiaToxWUQO88FXffI8c8xF7m/+Zir6vMq8=
    on_success: change
    on_failure: always
    on_pull_requests: false
    template:
    - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository_slug}@%{branch} by %{author} %{result} in %{elapsed_time}"
