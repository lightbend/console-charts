{{/*
   * Note to Helm devs: this is NOT a Helm template, but rather a plain go template used
   * in es-monitor-api to generate the final prometheus.yml.
   * dot2underscore is a function in es-monitor-api that replaces "." with "_"
   */}}
global:
  # dev mode
  scrape_interval: 10s
  evaluation_interval: 10s

rule_files:
  - /etc/config/rules/*.yaml

alerting:
  alertmanagers:
  - kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace,__meta_kubernetes_pod_label_app,__meta_kubernetes_pod_label_component,__meta_kubernetes_pod_container_port_number]
      regex: lightbend;prometheus;alertmanager;[0-9]+
      action: keep

scrape_configs:

  # Container metrics from kubelet cadvisor endpoint

  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    kubernetes_sd_configs:
      - role: node

    honor_labels: true

    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      - source_labels: [__meta_kubernetes_node_name]
        target_label: node_name
      - source_labels: [__meta_kubernetes_node_address_InternalIP]
        target_label: node_ip

    metric_relabel_configs:
      - source_labels: [pod_name]
        target_label: kubernetes_pod_name
      - regex: pod_name
        action: labeldrop
      # pause containers have all the network stats for a pod
      - source_labels: [container_name, __name__]
        regex: POD;container_(network).*
        target_label: container_name
      # drop all other pause container stats
      - source_labels: [container_name]
        regex: POD
        action: drop
      # drop system containers with no name
      - source_labels: [container_name]
        regex: ^$
        action: drop
      # drop high cardinality debug metrics
      - source_labels: [__name__]
        regex: container_(network_tcp_usage_total|tasks_state|cpu_usage_seconds_total|memory_failures_total|network_udp_usage_total)
        action: drop

  # kube-state-metrics

  - job_name: 'kube-state-metrics'

    kubernetes_sd_configs:
      - role: endpoints

    honor_labels: true

    relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: prometheus-kube-state-metrics
        action: keep
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node_name
      - source_labels: [__meta_kubernetes_pod_host_ip]
        action: replace
        target_label: node_ip

    # workload labels:
    metric_relabel_configs:
      - source_labels: [created_by_kind, pod, workload]
        regex: 'ReplicaSet;(.+)-[^-]+-[^-]+;'
        target_label: workload
      - source_labels: [created_by_kind, pod, workload]
        regex: 'StatefulSet;(.+)-[^-]+;'
        target_label: workload
      - source_labels: [created_by_kind, pod, workload]
        regex: 'DaemonSet;(.+)-[^-]+;'
        target_label: workload
      - source_labels: [created_by_kind, pod, workload]
        regex: 'Job;(.+)-[^-]+;'
        target_label: workload
      - source_labels: [created_by_kind, pod, workload]
        regex: 'ReplicationController;(.+)-[^-]+;'
        target_label: workload
      - source_labels: [created_by_kind, pod, workload]
        regex: '.none.;(.+);'
        target_label: workload
      - source_labels: [deployment, workload]
        regex: '(.+);'
        target_label: workload
      - source_labels: [daemonset, workload]
        regex: '(.+);'
        target_label: workload
{{ .MonitorTypeRules | indent 6 }}


  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: endpoints

    honor_labels: true

    relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: prometheus-node-exporter
        action: keep
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node_name
      - source_labels: [__meta_kubernetes_pod_host_ip]
        action: replace
        target_label: node_ip

  # Scrape config for service endpoints.
  #
  # The relabeling allows the actual service scrape endpoint to be configured
  # via the following annotations:
  #
  # * `{{ .PrometheusDomain }}/scrape`: Only scrape services that have a value of `true`
  # * `{{ .PrometheusDomain }}/scheme`: If the metrics endpoint is secured then you will need
  # to set this to `https` & most likely set the `tls_config` of the scrape config.
  # * `{{ .PrometheusDomain }}/path`: If the metrics path is not `/metrics` override this.
  # * `{{ .PrometheusDomain }}/port`: If the metrics are exposed on a different port to the
  # service then set this appropriately.

  - job_name: 'kubernetes-services'
    kubernetes_sd_configs:
      - role: endpoints

    honor_labels: true

    relabel_configs:
      # these have dedicated scrape sections:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: prometheus-node-exporter
        action: drop
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex:  prometheus-kube-state-metrics
        action: drop
      # _scrape _scheme _path _port annotation triggers:
      - source_labels: [__meta_kubernetes_service_annotation_{{ dot2underscore .PrometheusDomain }}_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_{{ dot2underscore .PrometheusDomain }}_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_{{ dot2underscore .PrometheusDomain }}_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_{{ dot2underscore .PrometheusDomain }}_port]
        action: replace
        target_label: __address__
        regex: (.+)(?::\d+);(\d+)
        replacement: $1:$2
      # metadata labels
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node_name
      - source_labels: [__meta_kubernetes_pod_host_ip]
        action: replace
        target_label: node_ip
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
      - source_labels: [__meta_kubernetes_pod_label_pod_template_hash, __meta_kubernetes_pod_name, workload]
        action: replace
        regex: '[^;]+;(.*)-[^-]+-[^-]+;'
        target_label: workload
      - source_labels: [__meta_kubernetes_pod_label_statefulset_kubernetes_io_pod_name, workload]
        action: replace
        regex: '(.*)-[0-9]+;'
        target_label: workload

    metric_relabel_configs:
{{ .MonitorTypeRules | indent 6 }}


  # Scrape config for pods
  #
  # The relabeling allows the actual pod scrape endpoint to be configured via the
  # following annotations:
  #
  # * `{{ .PrometheusDomain }}/scrape`: Only scrape pods that have a value of `true`
  # * `{{ .PrometheusDomain }}/path`: If the metrics path is not `/metrics` override this.
  # * `{{ .PrometheusDomain }}/port`: Scrape the pod on the indicated port instead of the default of `9102`.
  - job_name: 'kubernetes-pods'

    kubernetes_sd_configs:
      - role: pod

    honor_labels: true

    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_{{ dot2underscore .PrometheusDomain }}_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_{{ dot2underscore .PrometheusDomain }}_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_{{ dot2underscore .PrometheusDomain }}_port]
        action: replace
        regex: (.+):(?:\d+);(\d+)
        replacement: ${1}:${2}
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node_name
      - source_labels: [__meta_kubernetes_pod_host_ip]
        action: replace
        target_label: node_ip
      - source_labels: [__meta_kubernetes_pod_label_pod_template_hash, __meta_kubernetes_pod_name, workload]
        action: replace
        regex: '[^;]+;(.*)-[^-]+-[^-]+;'
        target_label: workload
      - source_labels: [__meta_kubernetes_pod_label_statefulset_kubernetes_io_pod_name, workload]
        action: replace
        regex: '(.*)-[0-9]+;'
        target_label: workload

    metric_relabel_configs:
{{ .MonitorTypeRules | indent 6 }}
