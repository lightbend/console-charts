#!/bin/bash

# Run all smoke tests with a filename of smoke_*.
# * Exit code indicates overall number of test failures.
# * Each test is piped to "sponge" to print output all at once
#   when the test run is finished, for better reports.

FAILURES=0
pids=()

function print_debug() {
    [[ $TRAVIS ]] || return
    echo -e "travis_fold:start:debug.logs\033[33;1mDebug Logs\033[0m"
    local pods=$(kubectl -n lightbend get pod --no-headers -o go-template='{{range .items}}{{.metadata.name}} {{end}}')
    echo
    echo "========================================"
    echo "Deployment details:"
    echo
    for pod in $pods; do
        echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        echo "Describe $pod:"
        echo
        kubectl -n lightbend describe pod "$pod"
        echo
        echo "Previous logs for $pod:"
        echo
        kubectl -n lightbend logs -p --all-containers "$pod"
        echo
        echo
        echo "Logs for $pod:"
        echo
        kubectl -n lightbend logs --all-containers "$pod"
        echo
    done
    echo
    echo "========================================"
    echo
    echo -e "\ntravis_fold:end:debug.logs\r"
}

print_debug

for smoketest in smoke_*; do
	echo ==== Running $smoketest

	./$smoketest 2>&1 > /tmp/log-$smoketest &
	pids+=($!)
	smoketests+=($smoketest)
done

# terminate all child processes if hit ctrl-c:
trap "kill 0; exit 1" INT

for (( n=0; n<${#pids[@]}; n++ )); do
    pid="${pids[$n]}"
    smoketest="${smoketests[$n]}"

    echo -n "Waiting for $smoketest to finish... "
    wait "$pid"
    r=$?
	((FAILURES+=$r))
	if [ "$r" == "0" ]; then
	    echo "done"
	else
	    echo "failed"
	    cat /tmp/log-$smoketest
	fi
done
echo

echo "All tests completed with $FAILURES failures"

if [ "$FAILURES" != "0" ]; then
    print_debug
fi

exit $FAILURES
