#!/bin/bash

## Test access to the console over kubectl port-forward setup

#set -x

if [[ ! $context  ]]; then
  source smokecommon
fi

KUBECTL_PID=
export TMPPIPE=$(mktemp -t pipe.XXX)

cleanup() {
    if [ -n "$KUBECTL_PID" ] ; then
        kill $KUBECTL_PID
    fi
    if [ -n "$TMPPIPE" ] ; then
        rm -f $TMPPIPE
    fi
}

# Make sure we kill the port-forward when we are done
trap cleanup 0

# Makes sure expose-es-console is ready
CONSOLE_NODE_BASE=$( busy_wait nodeport expose-es-console )

export CONSOLE_REMOTE_PORT=$( kubectl get -n lightbend services expose-es-console -o json | jq '.spec.ports[0].port' )

# Fire up the port forwarding
(
    # Forwarding to an ephemeral port to avoid collisions
    kubectl port-forward -n lightbend deployment/es-console :$CONSOLE_REMOTE_PORT 1>$TMPPIPE &
    KUBECTL_PID=$!
    # This eliminates the annoying message from the outer shell when killing the process
    wait $KUBECTL_PID 2>/dev/null 1>&2
) &

PGID=$( ps -o pgid= -p $$ )
KUBECTL_PID=$( ps -o pid=,pgid=,command= | sed -n "s/^ *\([0-9][0-9]*\) *$PGID kubectl port-forward.*/\1/p" )

# Need this so the port forwarding has a chance to get setup
sleep 1

CONSOLE_LOCAL_PORT=$( sed -n -e "1s/^.*:\(.*\) ->.*/\1/p" -e "1q" <$TMPPIPE )

# Test access
test_es_console_responding http://127.0.0.1:$CONSOLE_LOCAL_PORT

test_summary
