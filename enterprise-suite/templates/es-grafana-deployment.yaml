apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana-server
  labels:
    app: grafana
    component: server
spec:
  replicas: 1

  strategy:
    # Always Recreate to ensure the PVs get released. It's not possible to have two replicas sharing a PV during deployment.
    type: Recreate
    # Needed for helm upgrade to succeed.
    rollingUpdate: null

  template:
    metadata:
      labels:
        app: grafana
        component: server
    spec:
      {{ if .Values.podUID }}
      securityContext:
        runAsUser: {{ .Values.podUID }}
      {{ end }}

      imagePullSecrets:
      - name: commercial-credentials

      containers:
      - image: {{ tpl .Values.esGrafanaImage . }}:{{ .Values.esGrafanaVersion }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: grafana-server
        resources:
          requests:
            cpu: {{ default .Values.defaultCPURequest .Values.esGrafanaCPURequest }}
            memory: {{ default .Values.defaultMemoryRequest .Values.esGrafanaMemoryRequest }}
        env:
          # The next two env variables set up anonymous access to grafana with editor access.
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: "Editor"
          - name: GF_SERVER_ROOT_URL
            value: "/service/grafana/"
          - name: GF_SERVER_ROUTER_LOGGING
            value: "true"
          - name: GF_ANALYTICS_REPORTING_ENABLED
            value: "false"
          - name: GF_ANALYTICS_CHECK_FOR_UPDATES
            value: "false"
          {{- range $key, $val := .Values.esGrafanaEnvVars }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end }}
        ports:
          - containerPort: 3000
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo \"Waiting for grafana to enable cinnamon plugin...\"; until curl --output /dev/null --silent --head --fail curl http://127.0.0.1:3000; do echo -n '.' ;  sleep 2; done ; curl -XPOST 'admin:admin@127.0.0.1:3000/api/plugins/cinnamon-prometheus-app/settings?enabled=true' -d '' || true" ]
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
        volumeMounts:
        - name: grafana-dashboards
          mountPath: /usr/share/grafana/public/conf
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources/
        - name: grafana-data
          mountPath: /var/lib/grafana

      volumes:
      - name: grafana-dashboards
        configMap:
          name: exporter-graphs-cm
      - name: grafana-datasources
        configMap:
          name: grafana-datasource-cm
      - name: grafana-data
        {{ if or .Values.usePersistentVolumes (not .Values.useEmptyDirVolumes) }}
        persistentVolumeClaim:
          claimName: es-grafana-storage
        {{ else }}
        emptyDir: {}
        {{ end }}
