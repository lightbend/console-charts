
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es-console
spec:
  template:
    metadata:
      labels:
        run: es-console
    spec:
      {{ if .Values.podUID }}
      securityContext:
        runAsUser: {{ .Values.podUID }}
      {{ end }}
      containers:
      - name: es-console
        image: lightbend-docker-registry.bintray.io/enterprise-suite/es-console:{{ .Values.esConsoleVersion }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        resources:
          requests:
            cpu: {{ default .Values.defaultCPURequest .Values.esConsoleCPURequest }}
            memory: {{ default .Values.defaultMemoryRequest .Values.esConsoleMemoryRequest }}
        ports:
        - containerPort: 80
        volumeMounts:
          - name: config-volume
            mountPath: /etc/nginx/conf.d
      volumes:
        - name: config-volume
          configMap:
            name: es-console

{{ if .Values.minikube }}
---
apiVersion: v1
kind: Service
metadata:
  name: expose-es-console
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
    nodePort: 30080
  selector:
    run: es-console
  type: NodePort
{{ end }}

---
apiVersion: v1
kind: Service
metadata:
  name: console-server
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    run: es-console
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: es-console
data:
  default.conf: |-
    server {
      listen 80;
      server_name localhost;

      location / {
        root  /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri$args $uri$args/ /index.html;
      }

      location /service/prometheus/ {
        proxy_pass http://prometheus-server/;
      }

      location /service/es-monitor-api/ {
        proxy_pass http://es-monitor-api/;
      }

      location /service/grafana/ {
        proxy_pass http://grafana-server:3000/;
      }

    }
