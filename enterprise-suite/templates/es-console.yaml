
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es-console
spec:
  template:
    metadata:
      labels:
        run: es-console
    spec:
      {{ if .Values.podUID }}
      securityContext:
        runAsUser: {{ .Values.podUID }}
      {{ end }}

      initContainers:
      - name: nginx-conf-envsubst
        image: alpine
        resources:
          requests:
            cpu: {{ default .Values.defaultCPURequest }}
            memory: {{ default .Values.defaultMemoryRequest }}
        command:
        - /bin/sh
        - -c
        args:
        - apk add gettext libintl && cat /etc/es-console/default.conf.tmpl | envsubst > /etc/nginx/conf.d/default.conf
        volumeMounts:
        - name: config-volume
          mountPath: /etc/es-console
        - name: nginx-config
          mountPath: /etc/nginx/conf.d

      containers:
      - name: es-console
        image: lightbend-docker-registry.bintray.io/enterprise-suite/es-console:{{ .Values.esConsoleVersion }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        resources:
          requests:
            cpu: {{ default .Values.defaultCPURequest .Values.esConsoleCPURequest }}
            memory: {{ default .Values.defaultMemoryRequest .Values.esConsoleMemoryRequest }}
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true

      volumes:
      - name: config-volume
        configMap:
          name: es-console
      - name: nginx-config
        emptyDir: {}

{{ if .Values.minikube }}
---
apiVersion: v1
kind: Service
metadata:
  name: expose-es-console
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    nodePort: 30080
  selector:
    run: es-console
  type: NodePort
{{ end }}

---
apiVersion: v1
kind: Service
metadata:
  name: console-server
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    run: es-console
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: es-console
data:
  default.conf.tmpl: |-
    server {
      listen 8080;
      server_name localhost;

      location / {
        root  /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri$args $uri$args/ /index.html;
      }

      location /service/prometheus/ {
        proxy_pass http://$PROMETHEUS_SERVICE_HOST:$PROMETHEUS_SERVICE_PORT/;
      }

      location /service/es-monitor-api/ {
        proxy_pass http://$ES_MONITOR_API_SERVICE_HOST:$ES_MONITOR_API_SERVICE_PORT/;
      }

      location /service/grafana/ {
        proxy_pass http://$GRAFANA_SERVICE_HOST:$GRAFANA_SERVICE_PORT/;
      }

      location /service/alertmanager/ {
        proxy_pass http://$ALERTMANAGER_SERVICE_HOST:$ALERTMANAGER_SERVICE_PORT/;
      }
    }
