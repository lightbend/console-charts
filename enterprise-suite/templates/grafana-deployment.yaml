apiVersion: {{ .Values.deploymentApiVersion }}
kind: Deployment
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: {{ template "name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: grafana
spec:
  replicas: 1

  strategy:
    # Always Recreate to ensure the PVs get released. It's not possible to have two replicas sharing a PV during deployment.
    type: Recreate
    # Needed for helm upgrade to succeed.
    rollingUpdate: null

  selector:
    matchLabels:
      app: grafana
      component: server

  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "name" . }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: grafana
        # Deprecated - these should be removed eventually. Kept to support upgrades with the old labels.
        app: grafana
        component: server
      annotations:
        {{ .Values.prometheusDomain }}/scrape: "true"
        {{ .Values.prometheusDomain }}/port: "3000"

    spec:
      {{ if .Values.podUID }}
      securityContext:
        runAsUser: {{ .Values.podUID }}
      {{ end }}

      imagePullSecrets:
      - name: commercial-credentials

      containers:
      - image: {{ tpl .Values.esGrafanaImage . }}:{{ .Values.esGrafanaVersion }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: grafana-server
        resources:
          requests:
            cpu: {{ default .Values.defaultCPURequest .Values.esGrafanaCPURequest }}
            memory: {{ default .Values.defaultMemoryRequest .Values.esGrafanaMemoryRequest }}
        env:
          # The next two env variables set up anonymous access to grafana with editor access.
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: "Editor"
          - name: GF_SERVER_ROOT_URL
            value: "/service/grafana/"
          - name: GF_SERVER_ROUTER_LOGGING
            value: "true"
          - name: GF_ANALYTICS_REPORTING_ENABLED
            value: "false"
          - name: GF_ANALYTICS_CHECK_FOR_UPDATES
            value: "false"
          {{- range $key, $val := .Values.esGrafanaEnvVars }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end }}
        ports:
          - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana

      volumes:
      - name: grafana-data
        {{ if .Values.usePersistentVolumes }}
        persistentVolumeClaim:
          claimName: es-grafana-storage
        {{ else }}
        emptyDir: {}
        {{ end }}
